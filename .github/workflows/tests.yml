name: CI_pyMAP

# We run CI on push commits and pull requests on all branches
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build_pip:
        name: Pip Build (${{ matrix.os }}) - ${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -l {0}
                
        strategy:
            fail-fast: false #true
            matrix:
                os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
                python-version: ["3.9", "3.10", "3.11", "3.12"]

        steps:
            - name: Setup C/C++ Compiler
              id: install_cc
              uses: rlalik/setup-cpp-compiler@v1.2
              with:
                  compiler: gcc #clang

            - name: checkout repository
              uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              id: cp
              with:
                  python-version: ${{ matrix.python-version }}
                  update-environment: true
              
            - name: Editable Pip Install pyMAP
              env:
                  CC: '${{ steps.install_cc.outputs.cc }}'
                  CXX: '${{ steps.install_cc.outputs.cxx }}'
              run: |
                  '${{ steps.cp.outputs.python-path }}' -m pip install --upgrade pip
                  '${{ steps.cp.outputs.python-path }}' -m pip install numpy setuptools
                  '${{ steps.cp.outputs.python-path }}' -m pip install -e .

            - name: Editable Test run
              run: |
                  '${{ steps.cp.outputs.python-path }}' -m unittest discover -v
                  
            - name: Pip Install pyFrame3DD
              env:
                  CC: '${{ steps.install_cc.outputs.cc }}'
                  CXX: '${{ steps.install_cc.outputs.cxx }}'
              run: |
                  '${{ steps.cp.outputs.python-path }}' -m pip uninstall pymap
                  '${{ steps.cp.outputs.python-path }}' -m pip install -v .[test]

            #- name: Setup tmate session
            #  uses: mxschmitt/action-tmate@v3
            #  with:
            #      detached: true
            #  if: contains( matrix.os, 'ubuntu')

            - name: Test run
              run: |
                  '${{ steps.cp.outputs.python-path }}' -m unittest discover -v

